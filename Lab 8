Реалізувати набір тригерів, що реалізують такі ділові правила:
1) Кількість тем може бути в діапазоні від 5 до 10.
DELIMITER //

CREATE TRIGGER check_topic_count
BEFORE INSERT ON `books`
FOR EACH ROW
BEGIN
    DECLARE topic_count INT;
    SELECT COUNT(*) INTO topic_count FROM `books`;
    IF topic_count < 5 OR topic_count > 10 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Кількість тем має бути в діапазоні від 5 до 10';
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА:

 INSERT INTO books (New, Name) VALUES ('Видавнича група BHV', 'МикроАрт');

------------------------------------------------------------------------------------------
2) Новинкою може бути тільки книга видана в поточному році
DROP TRIGGER IF EXISTS check_topic_count;

DELIMITER //

CREATE TRIGGER check_new_release
BEFORE INSERT ON `books`
FOR EACH ROW
BEGIN
    DECLARE current_year INT;
    DECLARE release_year INT;
    SET current_year = YEAR(NOW());
    SET release_year = NEW.Date;
    IF release_year != current_year THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Книга може бути новинкою тільки в поточному році';
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА: 
 
INSERT INTO books (`Name`, Date)
VALUES ('Залізо IBM 2001', '2000-02-01');

----------------------------------------------------------------------------------------------
3) Книга з кількістю сторінок до 100 не може коштувати більше 10 $, до 200 - 20 $, до 300 - 30 $.
DROP TRIGGER IF EXISTS check_new_release;

DELIMITER //

CREATE TRIGGER check_book_price
BEFORE INSERT ON books
FOR EACH ROW
BEGIN
    DECLARE page_count INT;
    DECLARE book_price DECIMAL(10, 2);
    SET page_count = NEW.Pages;
    IF page_count <= 100 THEN
        SET book_price = 10.00;
    ELSEIF page_count <= 200 THEN
        SET book_price = 20.00;
    ELSEIF page_count <= 300 THEN
        SET book_price = 30.00;
    END IF;
    IF NEW.price > book_price THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Ціна книги перевищує максимально допустиму ціну для даної кількості сторінок';
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА:

INSERT INTO books (Name, Pages, Price)
VALUES ('Linux версії', 250, 35.00);


-------------------------------------------------------------------------------------------
4) Видавництво "BHV" не випускає книги накладом меншим 5000, а видавництво Diasoft - 10000.
DROP TRIGGER IF EXISTS check_book_price;

DELIMITER //

CREATE TRIGGER check_print_run
BEFORE INSERT ON books
FOR EACH ROW
BEGIN
    DECLARE print_run_limit INT;
    CASE NEW.PublishingHouseID
        WHEN 'Видавнича група BHV' THEN
            SET print_run_limit = 5000;
        WHEN 'Diasoft' THEN
            SET print_run_limit = 10000;
    END CASE;
    IF NEW.PublishingHouseID IN ('Видавнича група BHV', 'Diasoft') AND NEW.PublishingHouseID < print_run_limit THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Наклад книги менший за мінімально допустимий для даного видавництва';
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА:

INSERT INTO books (Name, PublishingHouseID, Pages)
VALUES ('Автоматизація інженерно-графічних робіт', 'Видавнича група BHV', 4000);


-----------------------------------------------------------------------------------------
5) Книги з однаковим кодом повинні мати однакові дані.
DROP TRIGGER IF EXISTS check_print_run;
DELIMITER //

CREATE TRIGGER ensure_unique_book_data
BEFORE INSERT ON books
FOR EACH ROW
BEGIN
    DECLARE existing_code INT;
    SELECT code INTO existing_code FROM books WHERE code = NEW.Code LIMIT 1;
    IF existing_code IS NOT NULL THEN
        SET NEW.name = (SELECT Name FROM books WHERE code = NEW.Code LIMIT 1);
        SET NEW.price = (SELECT price FROM books WHERE code = NEW.Code LIMIT 1);
        SET NEW.PublishingHouseID = (SELECT PublishingHouseID FROM books WHERE code = NEW.Code LIMIT 1);
        SET NEW.format = (SELECT format FROM books WHERE code = NEW.Code LIMIT 1);
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА:

INSERT INTO books (Code, Name, Price, PublishingHouseID, Format)
VALUES (12, 'Автоматизація інженерно-графічних робіт', 11.58, 'Видавнича група BHV', '70х100/16');

-----------------------------------------------------------------------------------------

6) При спробі видалення книги видається інформація про кількість видалених рядків. Якщо користувач не "dbo", то видалення забороняється.
DROP TRIGGER IF EXISTS ensure_unique_book_data;
DELIMITER //

CREATE TRIGGER prevent_delete_books
BEFORE DELETE ON books
FOR EACH ROW
BEGIN
    IF USER() <> 'dbo' THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Видалення книг заборонено для користувача, який не є "dbo"';
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА:

DELETE FROM books WHERE id = 220 AND USER() = 'goldfake';

------------------------------------------------------------------------------------------

7) Користувач "dbo" не має права змінювати ціну книги.
DROP TRIGGER IF EXISTS prevent_delete_books;
DELIMITER //

CREATE TRIGGER prevent_price_change
BEFORE UPDATE ON books
FOR EACH ROW
BEGIN
    IF USER() = 'dbo' THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Користувач "dbo" не має права змінювати ціну книги';
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА:

UPDATE books SET price = 25.00 WHERE id = 59 AND USER() = 'dbo';

---------------------------------------------------------------------------------------

8) Видавництва ДМК і Еком підручники не видають.
DROP TRIGGER IF EXISTS prevent_price_change;
DELIMITER //

CREATE TRIGGER prevent_publishers
BEFORE INSERT ON books
FOR EACH ROW
BEGIN
    IF NEW.PublishingHouseID = 'ДМК' OR NEW.PublishingHouseID = 'Еком' THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Видавництва "ДМК" і "Еком" не видають підручники';
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА: 

INSERT INTO books (Name, PublishingHouseID, Format, Price) VALUES ('Linux версії', 'ДМК', '70х100/16', 20.00);

-------------------------------------------------------------------------------------------

9) Видавництво не може випустити більше 10 новинок протягом одного місяця поточного року.
DROP TRIGGER IF EXISTS prevent_publishers;
DELIMITER //

CREATE TRIGGER prevent_max_new_employees
BEFORE INSERT ON books
FOR EACH ROW
BEGIN
  DECLARE new_month INT;
  DECLARE existing_count INT;

  SET new_month = MONTH(NEW.Date);

  SELECT COUNT(*)
  INTO existing_count
  FROM books
  WHERE YEAR(Date) = 2024
  AND MONTH(Date) = new_month
  AND NEW.New = 1;

  IF existing_count >= 10 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Видавництво вже випустило 10 новинок у поточному місяці';
  END IF;
END;
//

DELIMITER ;

ПРОВЕРКА:

INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);INSERT INTO books (name, PublishingHouseID, Date, New)
VALUES ('Назва книги', 1, '2024-04-18', 1);

----------------------------------------------------------------------------------------

10) Видавництво BHV не випускає книги формату 60х88 / 16.
DROP TRIGGER IF EXISTS prevent_max_new_employees;
DELIMITER //

CREATE TRIGGER prevent_inappropriate_format
BEFORE INSERT ON books
FOR EACH ROW
BEGIN
    IF NEW.PublishingHouseID  = 'Видавнича група BHV' AND NEW.format = '60х88 / 16' THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Видавництво "Видавнича група BHV" не випускає книги у форматі 60х88 / 16';
    END IF;
END;
//

DELIMITER ;

ПРОВЕРКА: 

INSERT INTO books (Name, PublishingHouseID, format) 
VALUES ('Автоматизація інженерно-графічних робіт', 'Видавнича група BHV', '60х88 / 16');
